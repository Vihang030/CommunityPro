@model CommunityPro.Models.Applicant

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Applicants", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Applicant</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        @{
            if (Model.ApplicantImage != null)
            {
                string imageBase64 = Convert.ToBase64String(Model.ApplicantImage.imageContent);
                string imageSrc = string.Format("data:" + Model.ApplicantImage.imageMimeType + ";base64,{0}", imageBase64);
                <img src="@imageSrc" style="max-height: 500px; max-width: 600px" class="img-responsive img-rounded" /><br />
                <input type="checkbox" id="chkRemoveImage" name="chkRemoveImage" /> <strong>Check to remove Picture</strong>
            }
        }
    </div>
        <div class="form-group">
            <label class="control-label col-md-2">Profile Picture:</label>
            <div class="col-md-10">
                <input type="file" class="" name="thePicture" /><br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EMail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Current Documents:</label>
            <div class="col-md-10">
                @foreach (var doc in Model.Files)
                {
                    @doc.FileName <br />
                }
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Additional Uploads:
            </label>
            <div class="col-md-10">
                <input type="file" class="" name="theFiles" multiple="multiple" /><br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QualificationID, "QualificationID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("QualificationID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.QualificationID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="row">
            <div class="col-md-2">&nbsp;</div>
            <div class="form-group col-md-4">
                <label class="control-label">Skills Assigned</label>
                @Html.ListBox("selectedOptions", (MultiSelectList)ViewBag.selOpts, new { @class = "form-control" })
            </div>
            <div class="form-group col-md-1">
                <div class="form-group">
                    <button type="button" id="btnRight" class="btn btn-danger" style="width:80px; margin-top:10px;">
                        <span  aria-hidden="true">Remove</span>
                    </button>
                </div>
                <div class="form-group">
                    <button type="button" id="btnLeft" class="btn btn-success" style="width:80px;">
                        <span  aria-hidden="true">Add</span>
                    </button>
                    <div></div>
                </div>
            </div>
            <div class="form-group col-md-4">
                <label class="control-label">Skills Available</label>
                @Html.ListBox("availOptions", (MultiSelectList)ViewBag.availOpts, new { @class = "form-control" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnSubmit" value="Save" class="btn btn-default" />
            </div>
        </div>

}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/multisel")
}
